{"version":3,"sources":["components/Auth.js","pages/User/Login.js","components/Protect.js","components/Sidebar.js","pages/User/UserFilter.js","pages/User/UserTable.js","pages/User/User.js","pages/User/CreatedUser.js","pages/User/UserDetail.js","pages/User/UpdatedUser.js","pages/User/ForgotPassword.js","pages/User/ResetPassword.js","pages/Chat/UserChat.js","pages/Chat/AdminChat.js","pages/index.js","pages/404.js","pages/500.js","App.js","reportWebVitals.js","index.js"],"names":["authContext","createContext","ProvideAuth","children","auth","socketDomain","process","apiDomain","signin","payload","cb_success","cb_error","axios","post","email","password","then","res","localStorage","setItem","data","token","JSON","stringify","user","catch","error","signup","formData","config","signout","getItem","sendPasswordResetEmail","confirmPasswordReset","put","remove","id","delete","headers","update","paginate","filter","get","detail","socket","io","transports","allowUpgrades","reconnect","secure","rejectUnauthorized","index","chat","createdChat","handleError","history","response","status","removeItem","replace","message","Array","isArray","msg","notification","useProvideAuth","Provider","value","useAuth","useContext","Login","useHistory","location","useLocation","Form","useForm","form","setFieldsValue","name","className","initialValues","remember","onFinish","values","from","state","pathname","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","valuePropName","noStyle","to","htmlType","PrivateRoute","rest","userId","parse","_id","emit","render","Header","Layout","Sider","Content","SideBar","useState","collapsed","setCollapsed","items","key","label","path","icon","TeamOutlined","MessageOutlined","find","_item","startsWith","avatar","toggle","menu","style","width","theme","Divider","onClick","confirmation","trigger","collapsible","mode","selectedKeys","item","clicked","push","map","padding","MenuUnfoldOutlined","MenuFoldOutlined","overlay","placement","e","preventDefault","src","backgroundColor","cursor","DownOutlined","UserFilter","props","dateFormat","setName","setEmail","address","setAddress","phone","setPhone","createdAt","setCreatedAt","query","URLSearchParams","param","useEffect","has","moment","onChangeInput","target","pushQueryStringToUrl","result","toString","search","onFilterUser","onPressEnterInput","trim","set","span","paddingRight","paddingLeft","onChange","onPressEnter","marginTop","marginBottom","format","date","SearchOutlined","createdAtFormat","UserTable","setStatus","users","page","pageSize","total","loading","removeUser","on","columns","title","dataIndex","text","record","sorter","a","b","username","localeCompare","includes","height","background","borderRadius","age","unix","size","EditOutlined","onConfirm","DeleteOutlined","dataSource","rowKey","pagination","current","showSizeChanger","User","setLoading","setUsers","setTotal","setPage","setPageSize","window","setParam","listenToPopstate","addEventListener","removeEventListener","page_size","res_remove","error_remove","CreatedUser","onRemove","beforeUpload","file","reader","FileReader","readAsDataURL","onload","url","listType","maxCount","formItemLayout","labelCol","wrapperCol","formItemLayoutWithOutLabel","xs","sm","offset","textAlign","margin","gender","birthday","hobbies","FormData","append","length","forEach","min","getValueFromEvent","UploadOutlined","initialValue","Group","options","max","List","fields","add","errors","PlusOutlined","field","MinusCircleOutlined","resetFields","UserDetail","setUser","setAvatar","useParams","column","bordered","tag","color","toUpperCase","UpdatedUser","undefined","uid","getFieldsValue","File","ForgotPassword","getFieldValue","MailOutlined","ResetPassword","fontSize","fontWeight","letterSpacing","backend","frontend","UserChat","TabPane","Tabs","admin","role","messageList","setMessageList","isOpen","setIsOpen","senderId","receiverId","messageListCopy","message_type","author","fileName","chats","i","sender","onMessageWasSent","newMessage","receiver","emoji","defaultActiveKey","tab","agentProfile","teamName","imageUrl","handleClick","onFilesSelected","mute","header","renderItem","AdminChat","setReceiverId","itemLayout","actions","onClickUserToChat","Meta","description","Boolean","Index","userLogin","isLoading","setIsLoading","Page404","subTitle","extra","Page500","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6850e5a6.chunk.js","sourcesContent":["import React, {useContext, createContext} from 'react'\nimport axios from 'axios'\nimport {io} from 'socket.io-client'\nimport {notification} from 'antd'\n\nconst authContext = createContext()\n\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth()\n  return (\n    <authContext.Provider value={auth}>\n      {children}\n    </authContext.Provider>\n  )\n}\n\nexport const useAuth = () => {\n  return useContext(authContext)\n}\n\nfunction useProvideAuth() {\n  const socketDomain = process.env.REACT_APP_SOCKET\n  const apiDomain = process.env.REACT_APP_API\n\n  const socket = io(socketDomain, {\n      transports: ['websocket'],  // https://stackoverflow.com/a/52180905/8987128\n      allowUpgrades: false,\n      reconnect: false,\n      secure: true,\n      rejectUnauthorized: false\n  })\n\n  const handleError = (error, history) => {\n    if(error.response.status === 401){\n      localStorage.removeItem('token')\n      history.replace('/login')\n    }else if(error.response.status === 404){\n      history.replace('/404')\n    }else if(error.response.status === 500){\n      history.replace('/500')\n    }else if(error.response.status === 400 || error.response.status === 403){\n      let message = ''\n      if(Array.isArray(error.response.data.message)){\n        message = error.response.data.message[0].msg\n      }else{\n        message = error.response.data.message\n      }\n      notification['error']({\n        message: message\n      })\n    }\n  }\n\n  const signin = (payload, cb_success = null, cb_error = null) => {\n    axios.post(\n      `${apiDomain}/api/user/login`, {\n        email: payload.email,\n        password: payload.password\n      }\n    ).then(res => {\n      localStorage.setItem('token', res.data.token)\n      localStorage.setItem('user', JSON.stringify(res.data.user))\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  // signup user\n  const signup = (formData, cb_success = null, cb_error = null) => {\n    const config = {\n      'headers': {\n        'content-type': 'multipart/form-data'\n      }\n    }\n    axios.post(\n      `${apiDomain}/api/user`, formData, config\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  // updated user\n  const update = (id, formData, cb_success = null, cb_error = null) => {\n    const config = {\n      'headers': {\n        'content-type': 'multipart/form-data',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    axios.put(\n      `${apiDomain}/api/user/${id}`, formData, config\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  // remove user\n  const remove = (id, cb_success = null, cb_error = null) => {\n    axios.delete(\n      `${apiDomain}/api/user/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  // detail user\n  const detail = (id, cb_success = null, cb_error = null) => {\n    axios.get(\n      `${apiDomain}/api/user/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  // user paginate\n  const paginate = (filter = '', cb_success = null, cb_error = null) => {\n    axios.get(\n      `${apiDomain}/api/user/${filter}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  // get all users\n  const index = (filter = '', cb_success = null, cb_error = null) => {\n    axios.get(\n      `${apiDomain}/api/user/all/${filter}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  const signout = (cb_success = null, cb_error = null) => {\n    const config = {\n      'headers': {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    axios.post(\n      `${apiDomain}/api/user/logout`, {} ,config\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  const sendPasswordResetEmail = (email, cb_success = null, cb_error = null) => {\n    axios.post(\n      `${apiDomain}/api/user/reset-password`, {email}\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  const confirmPasswordReset = (token, password, cb_success = null, cb_error = null) => {\n    axios.put(\n      `${apiDomain}/api/user/reset-password/${token}`, {password}\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n\n  const chat = (filter = '', cb_success = null, cb_error = null) => {\n    axios.get(\n      `${apiDomain}/api/chat/${filter}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n  \n  const createdChat = (formData, cb_success = null, cb_error = null) => {\n    const config = {\n      'headers': {\n        'content-type': 'multipart/form-data',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }\n    axios.post(\n      `${apiDomain}/api/chat`, formData, config\n    ).then(res => {\n      if(typeof(cb_success) == 'function'){\n        cb_success(res)\n      }\n    }).catch(error => {\n      if(typeof(cb_error) == 'function'){\n        cb_error(error)\n      }\n    })\n  }\n  \n  \n  // Return the user object and auth methods\n  return {\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    remove,\n    update,\n    paginate,\n    detail,\n    socket,\n    index,\n    chat,\n    createdChat,\n    handleError\n  }\n}","import {Form, Input, Button, Checkbox, notification} from 'antd'\nimport {useAuth} from '../.././components/Auth'\nimport {Link, useHistory, useLocation} from 'react-router-dom'\nimport {UserOutlined, LockOutlined} from '@ant-design/icons'\n\nexport function Login() {\n  const auth = useAuth()\n  let history = useHistory()\n  let location = useLocation()\n  const [form] = Form.useForm()\n  const email = localStorage.getItem('email')\n  if(email){\n    form.setFieldsValue({email})\n  }\n\n  const handleSubmit = (values) => {\n    let { from } = location.state || { from: { pathname: '/' } }\n    auth.signin(values, (res) => {\n      notification['success']({\n        message: res.data.message\n      })\n      if(values.remember){\n        localStorage.setItem('email', values.email)\n      }else{\n        localStorage.removeItem('email')\n      }\n      history.replace(from)\n    }, (error) => {\n      auth.handleError(error, history)\n    })\n  }\n\n  return (\n    <Form\n      form={form}\n      name='normal_login'\n      className='login-form'\n      initialValues={{ remember: true }}\n      onFinish={handleSubmit}\n    >\n      <Form.Item\n        name='email'\n        rules={[{required: true, message: 'Please input your email!'}]}\n      >\n        <Input prefix={<UserOutlined className='site-form-item-icon'/>} placeholder='Email' />\n      </Form.Item>\n      <Form.Item\n        name='password'\n        rules={[{required: true, message: 'Please input your Password!'}]}\n      >\n        <Input.Password\n          prefix={<LockOutlined className='site-form-item-icon'/>}\n          type='password'\n          placeholder='Password'\n        />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name='remember' valuePropName='checked' noStyle>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Link className='login-form-forgot' to={'/forgot-password'}>\n          Forgot password\n        </Link>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type='primary' htmlType='submit' className='login-form-button'>\n          Log in\n        </Button>\n        Or <Link to={'/signup'}>register now!</Link>\n      </Form.Item>\n    </Form>\n  )\n}","import {Route, Redirect} from 'react-router-dom'\nimport {useAuth} from './Auth'\n  \nexport function PrivateRoute({children, ...rest}) {\n  const auth = useAuth()\n  const token = localStorage.getItem('token')\n  if(token){\n    const userId = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))._id : ''\n    if(userId){\n      auth.socket.emit('login', userId)\n    } \n  }\n  return (\n    <Route\n      {...rest}\n      render={({location}) =>\n      token ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: {from: location}\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n    ","import '../css/Sidebar.css'\nimport {Layout, Menu, Avatar, Dropdown, notification} from 'antd'\nimport {MenuUnfoldOutlined, MenuFoldOutlined, MessageOutlined, DownOutlined, TeamOutlined} from '@ant-design/icons'\nimport {Link, useHistory, useLocation} from 'react-router-dom'\nimport {useAuth} from './Auth'\nimport {useState} from 'react'\n\nconst {Header, Sider, Content} = Layout\n\nexport function SideBar({children}){\n  const auth = useAuth()\n  const apiDomain = process.env.REACT_APP_API\n  const history = useHistory()\n  const location = useLocation()\n  const [collapsed, setCollapsed] = useState(false)\n  const items = [\n    {key: '1', label: 'Users', path: '/user', icon: <TeamOutlined/>},\n    {key: '2', label: 'Chat', path: '/', icon: <MessageOutlined/>}\n  ]\n  const [key] = useState(items.find(_item => location.pathname.startsWith(_item.path)).key)\n  const user = JSON.parse(localStorage.getItem('user'))\n  const avatar = `${apiDomain}/images/${user.avatar}`\n\n  const toggle = () => {\n      setCollapsed(!collapsed)\n  }\n\n  const logout = () => {\n    auth.signout((res) => {\n      notification['success']({\n        message: res.data.message\n      })\n      localStorage.removeItem('token')\n      localStorage.removeItem('user')\n      auth.socket.emit('logout', user._id, (confirmation) => {\n        if(confirmation){\n          history.replace('/login')\n        }\n      })\n    })\n  }\n\n  const menu = (\n    <Menu\n      style={{width: 200}}\n      theme={'light'}\n    >\n      <Menu.Item key=\"1\">\n        <Link to={`/user/profile/${user._id}`}>Detail Profile</Link>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"2\" onClick={logout}>Log out</Menu.Item>\n    </Menu>\n  )\n\n  const onClickMenu = (item) => {\n    const clicked = items.find(_item => _item.key === item.key)\n    history.push(clicked.path)\n  }\n\n  return (\n    <Layout>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[key]} onClick={onClickMenu}>\n          {items.map((item) => (\n            <Menu.Item key={item.key} icon={item.icon}>{item.label}</Menu.Item>\n          ))}\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {collapsed ? <MenuUnfoldOutlined className=\"trigger\" onClick={toggle}/> : <MenuFoldOutlined className=\"trigger\" onClick={toggle}/>}\n          <Dropdown className='dropdown-header' overlay={menu} trigger={['click']} placement='topLeft'>\n            <Link to=\"/#\" className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n              <Avatar src={avatar} style={{ backgroundColor: '#87d068', cursor: 'pointer'}}/> <DownOutlined />\n            </Link>\n          </Dropdown>\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n        >\n          {children}\n        </Content>\n      </Layout>\n    </Layout>\n    )\n}","import {Input, Button, DatePicker, Col, Row} from 'antd'\nimport {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {SearchOutlined} from '@ant-design/icons'\nimport moment from 'moment'\n\nexport function UserFilter(props){\n    const history = useHistory()\n    const dateFormat = 'DD-MM-YYYY'\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [address, setAddress] = useState('')\n    const [phone, setPhone] = useState('')\n    const [createdAt, setCreatedAt] = useState('')\n    const query = new URLSearchParams(props.param)\n    // set value for filter if url has query param\n    useEffect(() => {\n        // create a new instance of URLSearchParams to ignore useEffrect warning\n        const query = new URLSearchParams(props.param) \n        if(query.has('username')){\n            setName(query.get('username'))\n        }else{\n            setName('')\n        }\n        if(query.has('email')){\n            setEmail(query.get('email'))\n        }else{\n            setEmail('')\n        }\n        if(query.has('address')){\n            setAddress(query.get('address'))\n        }else{\n            setAddress('')\n        }\n        if(query.has('phone')){\n            setPhone(query.get('phone'))\n        }else{\n            setPhone('')\n        }\n        if(query.has('created_at')){\n            const createdAt = query.get('created_at')\n            if(createdAt){\n                setCreatedAt(moment(query.get('created_at'), dateFormat))\n            }else{\n                setCreatedAt('')\n            }    \n        }else{\n            setCreatedAt('')\n        }\n      }, [props.param])\n    \n    // set state for input value\n    const onChangeInput = (e, type) => {\n        if(type === 'name'){\n            setName(e.target.value)\n        }\n        if(type === 'email'){\n            setEmail(e.target.value)\n        }\n        if(type === 'address'){\n            setAddress(e.target.value)\n        }\n        if(type === 'phone'){\n            setPhone(e.target.value)\n        }\n    }\n\n    const onChangeCreatedAt = (date) => {\n        setCreatedAt(date)\n    }\n\n    // push query params to url and set state of parent's params\n    const pushQueryStringToUrl = (query) => {\n        const result = '?' + query.toString()\n        history.push({\n            pathname: '/user',\n            search: result\n        })\n        props.onFilterUser(result)\n    }\n\n    // handle filter when press enter input\n    const onPressEnterInput = (e, type) => {\n        if(name.trim() && type === 'name'){\n            query.set('username', name.trim())\n        }else{\n            query.delete('username')\n        }\n        if(email.trim() && type === 'email'){\n            query.set('email', email.trim())\n        }else{\n            query.delete('email')\n        }\n        if(address.trim() && type === 'address'){\n            query.set('address', address.trim())\n        }else{\n            query.delete('address')\n        }\n        if(phone.trim() && type === 'phone'){\n            query.set('phone', phone.trim())\n        }else{\n            query.delete('phone')\n        }\n        pushQueryStringToUrl(query)\n    }\n\n    // hanlde when click filter button\n    const onSearchUser = () => {\n        if(name.trim()){\n            query.set('username', name.trim())\n        }\n        if(email.trim()){\n            query.set('email', email.trim())\n        }\n        if(address.trim()){\n            query.set('address', address.trim())\n        }\n        if(phone.trim()){\n            query.set('phone', phone.trim())\n        }\n        if(createdAt){\n            const createdAtFormat = createdAt.format(dateFormat)\n            query.set('created_at', createdAtFormat)\n        }\n        if(name.trim() || email.trim() || address.trim() || phone.trim() || createdAt){\n            pushQueryStringToUrl(query)\n        }\n    }\n\n    // if clear filter, create a new instance of 'URLSearchParams' with no query param\n    const onClearFilter = () => {\n        const query = new URLSearchParams() \n        pushQueryStringToUrl(query)\n    }\n\n    return (\n        <div className='user-filter'>\n            <Row>\n                <Col span={6} style={{paddingRight: '10px', paddingLeft: '10px'}}><Input placeholder='Search name' value={name} onChange={(e) => {onChangeInput(e, 'name')}} onPressEnter={(e) => {onPressEnterInput(e, 'name')}}/></Col>\n                <Col span={6} style={{paddingRight: '10px', paddingLeft: '10px'}}><Input placeholder='Search email' value={email} onChange={(e) => {onChangeInput(e, 'email')}} onPressEnter={(e) => {onPressEnterInput(e, 'email')}}/></Col>\n                <Col span={6} style={{paddingRight: '10px', paddingLeft: '10px'}}><Input placeholder='Search address' value={address} onChange={(e) => {onChangeInput(e, 'address')}} onPressEnter={(e) => {onPressEnterInput(e, 'address')}}/></Col>\n                <Col span={6} style={{paddingRight: '10px', paddingLeft: '10px'}}><Input placeholder='Search phone' value={phone} onChange={(e) => {onChangeInput(e, 'phone')}} onPressEnter={(e) => {onPressEnterInput(e, 'phone')}}/></Col>\n            </Row>\n            <Col span={24} style={{ marginTop: '10px', marginBottom: '10px'}}></Col>\n            <Row>\n                <Col span={6} style={{paddingRight: '10px', paddingLeft: '10px'}}><DatePicker style={{ width: '100%' }} format={dateFormat} value={createdAt} onChange={onChangeCreatedAt}/></Col>\n                <Col span={3} style={{paddingRight: '10px', paddingLeft: '10px'}}>\n                    <Button style={{width: '100%' }} type='primary' icon={<SearchOutlined />} onClick={onSearchUser}>\n                        Search\n                    </Button>\n                </Col>\n                <Col span={3} style={{paddingRight: '10px', paddingLeft: '10px'}}>\n                    <Button style={{width: '100%'}} onClick={onClearFilter}>\n                        Clear\n                    </Button>\n                </Col>\n            </Row>\n        </div>\n    )\n}","import {Table, Space, Popconfirm, Tooltip, Avatar, Image} from 'antd'\nimport {Link, useHistory} from 'react-router-dom'\nimport moment from 'moment'\nimport {EditOutlined, DeleteOutlined} from '@ant-design/icons'\nimport {useEffect, useState} from 'react'\nimport {useAuth} from '../.././components/Auth'\n\nexport function UserTable(props){\n  const history = useHistory()\n  const auth = useAuth()\n  const apiDomain = process.env.REACT_APP_API\n  const [status, setStatus] = useState([])\n  const {users, page, pageSize, total, loading, param, removeUser, onFilterUser} = props\n  const query = new URLSearchParams(param)\n\n  // push query params to url and set state of parent's params\n  const pushQueryStringToUrl = (query) => {\n    const result = '?' + query.toString()\n    history.push({\n        pathname: '/user',\n        search: result\n    })\n    onFilterUser(result)\n  }\n\n  const onChange = (pagination) => {\n    if(pagination.current !== page || pagination.pageSize !== pageSize){\n      query.set('page', pagination.current)\n      query.set('page_size', pagination.pageSize)\n      pushQueryStringToUrl(query)\n    }\n  }\n\n  useEffect(() => {\n    auth.socket.on('online', function(data){\n      setStatus(data)\n    })\n    auth.socket.on('offline', function(data){\n      setStatus(data)\n    }) \n  }, [auth.socket])\n\n  const columns = [\n    {\n      title: 'Avatar',\n      dataIndex: 'avatar',\n      key: 'avatar',\n      render: (text, record) => (\n        <Avatar src={<Image src={`${apiDomain}/images/${record.avatar}`}/>}/>\n      ),\n      width: '5%'\n    },\n    {\n      title: 'Username',\n      dataIndex: 'username',\n      key: 'username',\n      sorter: (a, b) => a.username.localeCompare(b.username),\n      render: (text, record) => (\n        <>\n          <Space>\n            {status.includes(record._id) ? \n              <Tooltip placement='topRight' title='Online'>\n                <div style={{width: 7, height: 7, background: '#25c325', borderRadius: '50%'}}></div>\n              </Tooltip>\n                  :\n              <Tooltip placement='topRight' title='Offline'>\n                <div style={{width: 7, height: 7, background: 'grey', borderRadius: '50%'}}></div>\n              </Tooltip>\n            }\n            <Link to={`user/profile/${record._id}`}>\n              <Tooltip placement='topRight' title='View Profile'>\n                {text}\n              </Tooltip>  \n            </Link>\n          </Space>\n        </>\n      ),\n      width: '20%'\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      width: '10%',\n      sorter: (a, b) => a.age - b.age\n    },\n    {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      width: '20%'\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email',\n      width: '15%'\n    },\n    {\n      title: 'Phone',\n      key: 'phone',\n      dataIndex: 'phone',\n      width: '10%'\n    },\n    {\n      title: 'Created At',\n      key: 'created_at',\n      dataIndex: 'createdAt',\n      width: '15%',\n      sorter: (a, b) => moment(a.createdAt).unix() - moment(b.createdAt).unix(),\n      render: text => <>{moment(text, 'YYYY-MM-DD').format('DD-MM-YYYY')}</>\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      width: '5%',\n      render: (text, record) => (\n        <Space size='middle'>\n          <Link to={`user/${record._id}`}>\n            <Tooltip placement='topRight' title='Edit Profile'>\n              <EditOutlined />\n            </Tooltip>\n          </Link>\n          <Popconfirm title='Sure to delete?' onConfirm={(id) => removeUser(record._id)}>\n            <Link to={'#'}>\n              <Tooltip placement='topRight' title='Remove User'>\n                <DeleteOutlined />\n              </Tooltip>\n              </Link>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n  \n  return (\n    <Table\n        loading={loading}\n        style={{paddingLeft: 10, paddingRight: 10}}\n        columns={columns} \n        dataSource={users} \n        rowKey={record => record._id}\n        onChange={onChange}\n        pagination={{current: page, pageSize: pageSize, total: total, showSizeChanger: true}}\n    />\n  )\n}","import './User.css'\nimport {useState, useEffect} from 'react'\nimport {SideBar} from '../../components/Sidebar'\nimport {UserFilter} from './UserFilter'\nimport {UserTable} from './UserTable'\nimport {useAuth} from '../.././components/Auth'\nimport {useHistory} from \"react-router-dom\"\nimport {notification} from 'antd'\n\nexport function User() {\n  const auth = useAuth()\n  const history = useHistory()\n  const [loading, setLoading] = useState(true)\n  const [users, setUsers] = useState([])\n  const [total, setTotal] = useState(0)\n  const [page, setPage] = useState(1)\n  const [pageSize, setPageSize] = useState(10)\n  const [param, setParam] = useState(window.location.search)\n\n  const listenToPopstate = () => {\n    // when browser back or next, run this function to set query url\n    setParam(window.location.search)\n  }\n  \n  useEffect(() => {\n    window.addEventListener('popstate', listenToPopstate)\n    return () => window.removeEventListener('popstate', listenToPopstate)\n  }, [])\n  \n  useEffect(() => { \n    setLoading(true)\n    auth.paginate(param, (res) => {\n      setLoading(false)\n      setUsers(res.data.users)\n      setTotal(res.data.total)\n      setPage(res.data.page)\n      setPageSize(res.data.page_size)\n    }, (error) => {\n      auth.handleError(error, history)\n    })\n  }, [param, auth, history])\n\n  const onFilterUser = value => {\n    setParam(value)\n  }\n\n  const removeUser = (id) => {\n    auth.remove(id, (res_remove) => {\n      setLoading(true)\n      notification['success']({\n        message: res_remove.data.message\n      })\n      auth.paginate(param, (res) => {\n        setLoading(false)\n        setUsers(res.data.users)\n        setTotal(res.data.total)\n        setPage(res.data.page)\n        setPageSize(res.data.page_size)\n      }, (error) => {\n        auth.handleError(error, history)\n      })\n    }, (error_remove) => {\n      auth.handleError(error_remove, history)\n    })\n  }\n\n  return (\n    <SideBar>\n      <UserFilter onFilterUser={onFilterUser} param={param}/>\n      <UserTable \n        loading={loading}\n        users={users}\n        total={total}\n        page={page}\n        pageSize={pageSize}\n        param={param}\n        removeUser={removeUser}\n        onFilterUser={onFilterUser}\n      >    \n      </UserTable>\n    </SideBar>\n  )\n}","import {Form, Input, Button, Upload, Radio, InputNumber, Space, DatePicker, notification} from 'antd'\nimport {UploadOutlined, MinusCircleOutlined, PlusOutlined} from '@ant-design/icons'\nimport {useAuth} from '../.././components/Auth'\nimport {useHistory, useLocation} from 'react-router-dom'\nimport moment from 'moment'\n\nexport function CreatedUser() {\n    const auth = useAuth()\n    let history = useHistory()\n    let location = useLocation()\n    const [form] = Form.useForm()\n  \n    const handleSubmit = (values) => {\n        let { from } = location.state || { from: { pathname: '/login' } }\n        const {email, password, age, phone, address, username, gender, avatar, birthday, hobbies} = values\n        const formData = new FormData()\n        if(email) formData.append('email', email)\n        if(password) formData.append('password', password)\n        if(age) formData.append('age', age)\n        if(phone) formData.append('phone', phone)\n        if(address) formData.append('address', address)\n        if(username) formData.append('username', username)\n        if(gender) formData.append('gender', gender)\n        if(avatar) formData.append('avatar', avatar[0])\n        if(hobbies && hobbies.length){\n            hobbies.forEach((item) => formData.append('hobbies[]', item))\n        }\n        if(birthday instanceof moment){\n            formData.append('birthday', birthday.format())\n        }\n        auth.signup(formData, (res) => {\n            notification['success']({\n                message: res.data.message\n            })\n            history.replace(from)\n        }, (error) => {\n            auth.handleError(error, history)\n        })\n    }\n\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const props = {\n        onRemove: () => {\n            form.setFieldsValue({avatar: []})\n        },\n        beforeUpload(file){\n            const reader = new FileReader()\n            reader.readAsDataURL(file)\n            reader.onload = () => {\n                file.url = reader.result\n                form.setFieldsValue({avatar: [file]})\n            }\n            return false\n        },\n        listType: 'picture',\n        maxCount: 1\n      }\n\n    const onChangeGender = (e) => {\n        form.setFieldsValue({gender: e.target.value})\n    }\n\n    const options = [\n        {label: 'Male', value: 'male'},\n        {label: 'Female', value: 'female'},\n        {label: 'Other', value: 'other'}\n    ]\n\n    const formItemLayout = {\n        labelCol: {span: 8},\n        wrapperCol: {span: 8}\n    }\n\n    const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n            xs: {span: 8},\n            sm: {span: 8, offset: 8}\n        }\n    }\n\nreturn (\n    <>\n        <h1 style={{textAlign: 'center', margin: '50px 0px 20px 0px'}}>Create your account</h1>\n        <Form\n            {...formItemLayout}\n            form={form}\n            name='basic'\n            onFinish={handleSubmit}\n        >\n            <Form.Item\n                label='Username'\n                name='username'\n                rules={[\n                    { required: true, message: 'Please input your name!' },\n                    { min: 8} \n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label='Email'\n                name='email'\n                rules={[{ required: true, message: 'Please input your email!' }]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label='Password'\n                name='password'\n                rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                label='Avatar'\n                name='avatar'\n                valuePropName='fileList'\n                getValueFromEvent={() => {}}\n            >\n                <Upload\n                    {...props}\n                >\n                    <Button icon={<UploadOutlined />}>Upload avatar</Button>\n                </Upload>\n            </Form.Item>\n\n            <Form.Item\n                label='Gender'\n                name='gender'\n                initialValue={'other'}\n            >\n                <Radio.Group options={options} onChange={onChangeGender}/>\n            </Form.Item>\n\n            <Form.Item\n                label='Age'\n                name='age'\n                rules={[{ type: 'number', min: 0, max: 99 }]}\n            >\n                <InputNumber/>\n            </Form.Item>\n\n            <Form.Item \n                label='Birthday'\n                name='birthday'\n            >\n                <DatePicker format={'DD-MM-YYYY'}/>\n            </Form.Item>\n\n            <Form.Item\n                label='Address'\n                name='address'\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label='Phone'\n                name='phone'\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.List\n                name='hobbies'\n            >\n                {(fields, { add, remove }, { errors }) => (\n                <>\n                    <Form.Item {...formItemLayout} label='Hobbies'>\n                        <Button\n                            type='dashed'\n                            onClick={() => add()}\n                            style={{ width: '60%' }}\n                            icon={<PlusOutlined />}\n                        >\n                            Add your hobby\n                        </Button>\n                    </Form.Item>\n                    {fields.map((field, index) => (\n                        <Form.Item\n                            {...formItemLayoutWithOutLabel}\n                            key={field.key}\n                        >\n                            <Form.Item\n                                {...field}\n                                rules={[\n                                    { max: 10, message: 'Your hobby max 50 characters'},\n                                    { required: true, message: 'Please input your hobby!' }\n                                ]}\n                                noStyle\n                            >\n                            <Input style={{ width: '60%' }} />\n                            </Form.Item>\n                            <MinusCircleOutlined\n                                className='dynamic-delete-button'\n                                onClick={() => remove(field.name)}\n                            />\n                        </Form.Item>\n                    ))}\n                </>\n                )}\n            </Form.List>\n\n            <Form.Item {...formItemLayoutWithOutLabel}>\n                <Space>\n                    <Button type='primary' htmlType='submit'>\n                        Signup\n                    </Button>\n                    <Button htmlType='button' onClick={onReset}>\n                        Reset\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    </>\n    )\n}","import {Descriptions, Image, Tag} from 'antd'\nimport {SideBar} from '../../components/Sidebar'\nimport {useParams} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport {useAuth} from '../.././components/Auth'\nimport moment from 'moment'\nimport {useHistory} from 'react-router-dom'\n\nexport function UserDetail(){\n    const auth = useAuth()\n    const apiDomain = process.env.REACT_APP_API\n    const history = useHistory()\n    const [user, setUser] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const {id} = useParams('')\n\n    useEffect(() => { \n        auth.detail(id, (res) => {\n          setUser(res.data.user)\n          if(res.data.user.avatar){\n            setAvatar(`${apiDomain}/images/${res.data.user.avatar}`)\n          }\n        }, (error) => {\n            auth.handleError(error, history)\n        })\n    }, [auth, apiDomain, id, history])\n\n    return (\n        <SideBar>\n            <Descriptions title={`${user.username}'s Profile`} column={1} style={{padding: 15}} bordered={true}>\n            <Descriptions.Item label='Avatar'>\n                <Image\n                    width={200}\n                    src={avatar}\n                />\n            </Descriptions.Item>\n            <Descriptions.Item label='Username'>{user.username}</Descriptions.Item>\n            <Descriptions.Item label='Phone'>{user.phone}</Descriptions.Item>\n            <Descriptions.Item label='Adress'>{user.address}</Descriptions.Item>\n            <Descriptions.Item label='Email'>{user.email}</Descriptions.Item>\n            <Descriptions.Item label='Age'>{user.age}</Descriptions.Item>\n            <Descriptions.Item label='Gender'>{user.gender}</Descriptions.Item>\n            <Descriptions.Item label='Birthday'>{moment(user.birthday).format('DD-MM-YYYY')}</Descriptions.Item>\n            <Descriptions.Item label='Hobbies'>\n                {user.hobbies && user.hobbies.map(tag => {\n                    return (\n                        <Tag color={'geekblue'} key={tag}>\n                            {tag.toUpperCase()}\n                        </Tag>\n                    )\n                })}\n            </Descriptions.Item>\n            </Descriptions>\n        </SideBar>\n    )\n}","import './User.css'\nimport React, {useEffect, useState} from 'react'\nimport {Form, Input, Button, Upload, Radio, InputNumber, DatePicker, Space, notification} from 'antd'\nimport {UploadOutlined, MinusCircleOutlined, PlusOutlined} from '@ant-design/icons'\nimport {useAuth} from '../.././components/Auth'\nimport {SideBar} from '../../components/Sidebar'\nimport {useParams, useHistory} from 'react-router-dom'\nimport moment from 'moment'\n\nexport function UpdatedUser() {\n    const {id} = useParams()\n    const auth = useAuth()\n    const apiDomain = process.env.REACT_APP_API\n    const history = useHistory()\n    const [user, setUser] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [form] = Form.useForm()\n    \n    useEffect(() => { \n        auth.detail(id, (res) => {\n            setUser(res.data.user)\n            form.setFieldsValue({\n                username: res.data.user.username,\n                email: res.data.user.email,\n                age: res.data.user.age,\n                birthday: res.data.user.birthday ? moment(res.data.user.birthday, 'DD-MM-YYYY') : undefined,\n                hobbies: res.data.user.hobbies,\n                phone: res.data.user.phone,\n                address: res.data.user.address,\n                gender: res.data.user.gender ? res.data.user.gender : 'other',\n                avatar: res.data.user.avatar ? [{\n                    uid: '-1',\n                    name: res.data.user.avatar,\n                    status: 'done',\n                    url: `${apiDomain}/images/${res.data.user.avatar}`\n                    }] : [{\n                        uid: '-1',\n                        status: 'done',\n                        name: 'choose file to upload'\n                }]\n            })\n        })\n    }, [auth, apiDomain, id, form])\n\n    useEffect(() => {\n        if(loading){\n            const formData = new FormData()\n            const {email, age, phone, address, username, gender, avatar, birthday, hobbies} = form.getFieldsValue()\n            formData.append('phone', phone)\n            formData.append('address', address)\n            formData.append('username', username)\n            formData.append('email', email)\n            formData.append('gender', gender)\n            if(age !== null){\n                formData.append('age', age)\n            }else{\n                formData.append('age', '')\n            }\n            if(hobbies && hobbies.length){\n                hobbies.forEach((item) => formData.append('hobbies[]', item))\n            }\n            if(birthday instanceof moment){\n                formData.append('birthday', birthday.format())\n            }\n            if(!avatar){\n                formData.append('default_avatar', true)\n            }else{\n                if(avatar[0] instanceof File){\n                    formData.append('avatar', avatar[0])\n                }\n            }\n            auth.update(id, formData, (res) => {\n                setLoading(false)\n                notification['success']({\n                    message: res.data.message\n                })\n            }, (error) => {\n                setLoading(false)\n                auth.handleError(error, history)\n            })\n        }\n    }, [auth, history, id, loading, form])\n  \n    const handleSubmit = () => {\n        setLoading(true)\n    }\n\n    const onReset = () => {\n        form.setFieldsValue({\n            username: user.username,\n            email: user.email,\n            age: user.age,\n            birthday: user.birthday ? moment(user.birthday, 'DD-MM-YYYY') : undefined,\n            hobbies: user.hobbies,\n            phone: user.phone,\n            address: user.address,\n            gender: user.gender ? user.gender : 'other',\n            avatar: user.avatar ? [{\n                uid: '-1',\n                name: user.avatar,\n                status: 'done',\n                url: `${apiDomain}/images/${user.avatar}`\n                }] : [{\n                    uid: '-1',\n                    status: 'done',\n                    name: 'choose file to upload'\n            }]\n        })\n    }\n\n    const props = {\n        onRemove: () => {\n            form.setFieldsValue({avatar: []})\n        },\n        beforeUpload(file){\n            const reader = new FileReader()\n            reader.readAsDataURL(file)\n            reader.onload = () => {\n                file.url = reader.result\n                form.setFieldsValue({avatar: [file]})\n            }\n            return false\n        },\n        listType: 'picture',\n        maxCount: 1,\n    }\n\n    const onChangeGender = (e) => {\n        form.setFieldsValue({gender: e.target.value})\n    }\n\n    const options = [\n        {label: 'Male', value: 'male'},\n        {label: 'Female', value: 'female'},\n        {label: 'Other', value: 'other'}\n    ]\n\n    const formItemLayout = {\n        labelCol: {span: 8},\n        wrapperCol: {span: 8}\n    }\n\n    const formItemLayoutWithOutLabel = {\n        wrapperCol: {\n            xs: {span: 8},\n            sm: {span: 8, offset: 8 }\n        }\n    }\n\nreturn (\n    <SideBar>\n        <h1 style={{textAlign: 'center', margin: '15px 0px 20px 0px'}}>Update your account</h1>\n        <Form\n            {...formItemLayout}\n            form={form}\n            name='basic'\n            onFinish={handleSubmit}\n        >\n            <Form.Item\n                label='Username'\n                name='username'\n                rules={[\n                    {required: true, message: 'Please input your name!'},\n                ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label='Email'\n                name='email'\n                rules={[{required: true, message: 'Please input your email!'}]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label='Avatar'\n                name='avatar'\n                valuePropName='fileList'\n                getValueFromEvent={() => {}}\n            >\n                <Upload {...props}>\n                    <Button icon={<UploadOutlined />}>Upload avatar</Button>\n                </Upload>\n            </Form.Item>\n\n            <Form.Item\n                label='Gender'\n                name='gender'\n            >\n                <Radio.Group options={options} onChange={onChangeGender}/>\n            </Form.Item>\n\n            <Form.Item \n                label='Birthday'\n                name='birthday'\n            >\n                <DatePicker format={'DD-MM-YYYY'}/>\n            </Form.Item>\n\n            <Form.Item\n                label='Age'\n                name='age'\n                rules={[{type: 'number', min: 0, max: 99}]}\n            >\n                <InputNumber/>\n            </Form.Item>\n\n            <Form.Item\n                label='Address'\n                name='address'\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label='Phone'\n                name='phone'\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.List\n                name='hobbies'\n            >\n                {(fields, { add, remove }, { errors }) => (\n                <>\n                    <Form.Item {...formItemLayout} label='Hobbies'>\n                        <Button\n                            type='dashed'\n                            onClick={() => add()}\n                            style={{width: '60%'}}\n                            icon={<PlusOutlined />}\n                        >\n                            Add your hobby\n                        </Button>\n                    </Form.Item>\n                    {fields.map((field, index) => (\n                        <Form.Item\n                            {...formItemLayoutWithOutLabel}\n                            key={field.key}\n                        >\n                            <Form.Item\n                                {...field}\n                                rules={[\n                                    {max: 10, message: 'Your hobby max 50 characters'},\n                                    {required: true, message: 'Please input your hobby!'}\n                                ]}\n                                noStyle\n                            >\n                            <Input style={{width: '60%'}} />\n                            </Form.Item>\n                            <MinusCircleOutlined\n                                className='dynamic-delete-button'\n                                onClick={() => remove(field.name)}\n                            />\n                        </Form.Item>\n                    ))}\n                </>\n                )}\n            </Form.List>\n\n            <Form.Item {...formItemLayoutWithOutLabel}>\n                <Space>\n                    <Button type='primary' htmlType='submit'\n                        loading={loading}\n                    >\n                        Update\n                    </Button>\n                    <Button htmlType='button' onClick={onReset}>\n                        Reset\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    </SideBar>\n    )\n}","import {Form, Input, Button, notification} from 'antd'\nimport {useAuth} from '../.././components/Auth'\nimport {MailOutlined} from '@ant-design/icons'\nimport {useHistory} from 'react-router-dom'\n\nexport function ForgotPassword() {\n  const auth = useAuth()\n  const history = useHistory()\n  const [form] = Form.useForm()\n\n  const handleSubmit = () => {\n    const email = form.getFieldValue('email')\n    auth.sendPasswordResetEmail(email, (res) => {\n      notification['success']({\n          message: res.data.message\n      })\n      history.replace('/login')\n    }, (error) => {\n        auth.handleError(error, history)\n    })\n  }\n\n  return (\n    <Form\n      form={form}\n      name='normal_login'\n      className='login-form'\n      onFinish={handleSubmit}\n    >\n      <Form.Item>\n        <h2 className='text-center'>Forgot Password?</h2>\n        <p className='text-center'>You can reset your password here.</p>\n      </Form.Item>\n      <Form.Item\n        name='email'\n        rules={[{ required: true, message: 'Please input your email!' }]}\n      >\n        <Input prefix={<MailOutlined className='site-form-item-icon' />} placeholder='Email address' />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type='primary' htmlType='submit' className='login-form-button'>\n          Reset Password\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}","import {useParams} from 'react-router-dom'\nimport {useAuth} from '../.././components/Auth'\nimport {Form, Button, Input, notification} from 'antd'\nimport {LockOutlined} from '@ant-design/icons'\nimport {useHistory} from 'react-router-dom'\n\nexport function ResetPassword(){\n  const auth = useAuth()\n  const history = useHistory()\n  const [form] = Form.useForm()\n  const {token} = useParams('')\n  const handleSubmit = () => {\n    const password = form.getFieldValue('password')\n    auth.confirmPasswordReset(token, password, (res) => {\n      notification['success']({\n          message: res.data.message\n      })\n      history.replace('/login')\n    }, (error) => {\n        auth.handleError(error, history)\n    })\n  }\n\n  return (\n    <Form\n      form={form}\n      name='normal_login'\n      className='login-form'\n      onFinish={handleSubmit}\n    >\n      <Form.Item>\n        <h1 style={{fontSize: 24, fontWeight: 300, letterSpacing: -0.5, textAlign: 'center'}}>Change password for BinhDang</h1>\n      </Form.Item>\n\n      <Form.Item\n        name='password'\n        rules={[{required: true, message: 'Please input your password!'}]}\n      >\n        <Input.Password \n          prefix={<LockOutlined className='site-form-item-icon'/>}\n          type='password'\n          placeholder='Password'\n        />\n      </Form.Item>\n\n      <Form.Item\n        name='password-confirm'\n        rules={[{required: true, message: 'Please input your confirm password!'}]}\n      >\n        <Input.Password \n          prefix={<LockOutlined className='site-form-item-icon'/>}\n          type='password'\n          placeholder='Confirm password'\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type='primary' htmlType='submit' className='login-form-button'>\n          Reset Password\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}","import {Launcher} from 'react-chat-window'\nimport {Descriptions, Image, Tabs, Tag, List} from 'antd'\nimport moment from 'moment'\nimport {useState, useEffect} from 'react'\nimport {useAuth} from '../../components/Auth'\nimport {Link} from 'react-router-dom'\n\nconst backend = [\n    'Api: Create, update, delete, detail, pagination base on MVC model',\n    'Database mongodb: Use mongoose to save user and chat message',\n    'Authentication: JWT register, login, logout, refresh token, reset password by email',\n    'Redis: Save black list token when user logout',\n    'Validator: Use Express-validator to validate data',\n    'Upload image: Use Multer to upload avatar for user when create, update profile and send image through chat',\n    'Permission: Check permision by role, default is user, Binh is admin',\n    'SocketIO: Realtime online status when user login, realtime chat messege bettwen user and admin'\n]\n\nconst frontend = [\n    'React: Use react Hook to write function component with useState, useEffect, useMemo, UseAuth',\n    'Library: Use antdesign for my project: component, icon, handle form data',\n    'Api: Use axios to get data from server',\n    'Users: Create, update, delete, detail, pagination users show online status, sorter, filter base on url: refresh page, back and next browser',\n    'Chat: User after register can only chat with admin is Binh, Binh can reply to everyone'\n]\n\nexport function UserChat(props){\n    const {TabPane} = Tabs\n    const {users} = props\n    const auth = useAuth()\n    const apiDomain = process.env.REACT_APP_API\n    const admin = users.filter(user => user.role === 'admin')[0]\n    const [messageList, setMessageList] = useState([])\n    const [isOpen, setIsOpen] = useState(false)\n    const [senderId] = useState(JSON.parse(localStorage.getItem('user'))._id)\n    const [receiverId] = useState(admin._id)\n\n    useEffect(() => {\n        auth.socket.on('chat', function(data){\n            if(isOpen){\n                let messageListCopy = [...messageList]\n                if(data.message_type === 'file'){\n                    messageListCopy.push({author: 'them', data: {url: `${apiDomain}/images/${data.message}`, fileName: data.message}, type: data.message_type})\n                }else{\n                    messageListCopy.push({author: 'them', data: {[data.message_type]: data.message}, type: data.message_type})\n                }\n                setMessageList(messageListCopy)\n            }else{\n                setIsOpen(true)\n            }\n        })\n    }, [auth.socket, apiDomain, isOpen, messageList])\n\n    useEffect(() => { \n        if(isOpen){\n            auth.chat(`?sender=${senderId}&receiver=${receiverId}`, (res) => {\n                const chats = []\n                for(let i = 0; i < res.data.chats.length; i++){\n                    if(res.data.chats[i].message_type === 'file'){\n                        if(res.data.chats[i].sender === senderId){\n                            chats.push({author: 'me', data: {url: `${apiDomain}/images/${res.data.chats[i].message}`, fileName: res.data.chats[i].message}, type: res.data.chats[i].message_type}) \n                        }else{\n                            chats.push({author: 'them', data: {url: `${apiDomain}images/${res.data.chats[i].message}`, fileName: res.data.chats[i].message}, type: res.data.chats[i].message_type})\n                        }   \n                    }else{\n                        if(res.data.chats[i].sender === senderId){\n                            chats.push({author: 'me', data: {[res.data.chats[i].message_type]: res.data.chats[i].message}, type: res.data.chats[i].message_type})\n                        }else{\n                            chats.push({author: 'them', data: {[res.data.chats[i].message_type]: res.data.chats[i].message}, type: res.data.chats[i].message_type})\n                        }\n                    }\n                }\n                setMessageList(chats)\n            })\n        }\n    }, [auth, apiDomain, isOpen, senderId, receiverId])\n\n    const onMessageWasSent = (newMessage) => {\n        if(senderId && receiverId){\n            let messageListCopy = [...messageList]\n            messageListCopy.push(newMessage)\n            setMessageList(messageListCopy)\n            if(newMessage.type === 'text'){\n                auth.socket.emit('chat', {sender: senderId, receiver: receiverId, message: newMessage.data.text, type: 'text'})\n            }else if(newMessage.type === 'emoji'){\n                auth.socket.emit('chat', {sender: senderId, receiver: receiverId, message: newMessage.data.emoji, type: 'emoji'})\n            }else if(newMessage.type === 'file'){\n                auth.socket.emit('chat', {sender: senderId, receiver: receiverId, message: newMessage.data.fileName, type: 'file'})\n            }\n        }\n    }\n\n    const onClickChat = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const onFilesSelected = (file) => {\n        const formData = new FormData()\n        formData.append('avatar', file[0])\n        formData.append('sender', senderId)\n        formData.append('receiver', receiverId)\n        formData.append('type', 'file')\n        auth.createdChat(formData, (res) => {\n            onMessageWasSent({author: 'me', type : 'file', data : {url: `${apiDomain}images/${res.data.chat.message}`, fileName: res.data.chat.message}})\n        })\n    }\n\n    return (\n        <Tabs defaultActiveKey=\"1\" type=\"card\">\n            <TabPane tab=\"Profile\" key=\"1\">\n                <Descriptions title=\"Personality\" column={1} style={{padding: 15}} bordered={true}>\n                <Descriptions.Item label=\"Avatar\">\n                    <Image\n                        width={200}\n                        src={`${apiDomain}images/${admin.avatar}`}\n                    />\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Username\">{admin.username}</Descriptions.Item>\n                <Descriptions.Item label=\"Phone\">{admin.phone}</Descriptions.Item>\n                <Descriptions.Item label=\"Adress\">{admin.address}</Descriptions.Item>\n                <Descriptions.Item label=\"Email\">{admin.email}</Descriptions.Item>\n                <Descriptions.Item label=\"Age\">{admin.age}</Descriptions.Item>\n                <Descriptions.Item label=\"Gender\">{admin.gender}</Descriptions.Item>\n                <Descriptions.Item label=\"Birthday\">{moment(admin.birthday).format('DD-MM-YYYY')}</Descriptions.Item>\n                <Descriptions.Item label=\"Hobbies\">\n                    {admin.hobbies && admin.hobbies.map(tag => {\n                        return (\n                            <Tag color={'geekblue'} key={tag}>\n                                {tag.toUpperCase()}\n                            </Tag>\n                        )\n                    })}\n                </Descriptions.Item>\n                </Descriptions>\n                <Launcher\n                    agentProfile={{\n                        teamName: `Chat to ${admin.username}`,\n                        imageUrl: `${apiDomain}images/${admin.avatar}`\n                    }}\n                    messageList={messageList}\n                    onMessageWasSent={onMessageWasSent}\n                    handleClick={() => onClickChat(admin)}\n                    isOpen={isOpen}\n                    onFilesSelected={onFilesSelected}\n                    mute={true}\n                />\n            </TabPane>\n            <TabPane tab=\"Describe Project\" key=\"2\">\n                <List\n                    size=\"large\"\n                    header={<Link to={'#'}>Backend - Nodejs Express</Link>}\n                    bordered\n                    dataSource={backend}\n                    renderItem={item => <List.Item>{item}</List.Item>}\n                />\n                <List\n                    style={{marginTop: 15}}\n                    size=\"large\"\n                    header={<Link to={'#'}>Frontend - Reactjs</Link>}\n                    bordered\n                    dataSource={frontend}\n                    renderItem={item => <List.Item>{item}</List.Item>}\n                />\n            </TabPane>\n        </Tabs>\n    )\n}","import {List, Avatar, Space} from 'antd'\nimport {Launcher} from 'react-chat-window'\nimport {Link} from 'react-router-dom'\nimport {MessageOutlined} from '@ant-design/icons'\nimport {useState, useEffect} from 'react'\nimport {useAuth} from '../../components/Auth'\n\nexport function AdminChat(props){\n    const auth = useAuth()\n    const apiDomain = process.env.REACT_APP_API\n    const {users} = props\n    const [messageList, setMessageList] = useState([])\n    const [senderId] = useState(JSON.parse(localStorage.getItem('user'))._id)\n    const [receiverId, setReceiverId] = useState('')\n    const receiver = users.filter(user => user._id === receiverId)[0]\n\n    const onClickUserToChat = (user) => {\n        if(receiverId !== user._id) setReceiverId(user._id)\n    }\n\n    useEffect(() => {\n        auth.socket.on('chat', function(data){\n            if(receiverId && data.sender === receiverId){\n                let messageListCopy = [...messageList]\n                if(data.message_type === 'file'){\n                    messageListCopy.push({author: 'them', data: {url: `${apiDomain}/images/${data.message}`, fileName: data.message}, type: data.message_type})\n                }else{\n                    messageListCopy.push({author: 'them', data: {[data.message_type]: data.message}, type: data.message_type})\n                }\n                setMessageList(messageListCopy)\n            }else{\n                setReceiverId(data.sender)\n            }\n        })\n    }, [auth.socket, apiDomain, receiverId, messageList])\n\n    useEffect(() => { \n        if(receiverId){\n            auth.chat(`?sender=${senderId}&receiver=${receiverId}`, (res) => {\n                const chats = []\n                for(let i = 0; i < res.data.chats.length; i++){\n                    if(res.data.chats[i].message_type === 'file'){\n                        if(res.data.chats[i].sender === senderId){\n                            chats.push({author: 'me', data: {url: `${apiDomain}/images/${res.data.chats[i].message}`, fileName: res.data.chats[i].message}, type: res.data.chats[i].message_type}) \n                        }else{\n                            chats.push({author: 'them', data: {url: `${apiDomain}/images/${res.data.chats[i].message}`, fileName: res.data.chats[i].message}, type: res.data.chats[i].message_type})\n                        }   \n                    }else{\n                        if(res.data.chats[i].sender === senderId){\n                            chats.push({author: 'me', data: {[res.data.chats[i].message_type]: res.data.chats[i].message}, type: res.data.chats[i].message_type})\n                        }else{\n                            chats.push({author: 'them', data: {[res.data.chats[i].message_type]: res.data.chats[i].message}, type: res.data.chats[i].message_type})\n                        }\n                    }\n                }\n                setMessageList(chats)\n            })\n        }\n    }, [auth, apiDomain, senderId, receiverId])\n  \n    const onMessageWasSent = (newMessage) => {\n        if(senderId && receiverId){\n            let messageListCopy = [...messageList]\n            messageListCopy.push(newMessage)\n            setMessageList(messageListCopy)\n            if(newMessage.type === 'text'){\n                auth.socket.emit('chat', {sender: senderId, receiver: receiverId, message: newMessage.data.text, type: 'text'})\n            }else if(newMessage.type === 'emoji'){\n                auth.socket.emit('chat', {sender: senderId, receiver: receiverId, message: newMessage.data.emoji, type: 'emoji'})\n            }else if(newMessage.type === 'file'){\n                auth.socket.emit('chat', {sender: senderId, receiver: receiverId, message: newMessage.data.fileName, type: 'file'})\n            }\n        }\n    }\n\n    const onClickChat = () => {\n        setReceiverId('')\n    }\n\n    const onFilesSelected = (file) => {\n        const formData = new FormData()\n        formData.append('avatar', file[0])\n        formData.append('sender', senderId)\n        formData.append('receiver', receiverId)\n        formData.append('type', 'file')\n        auth.createdChat(formData, (res) => {\n            onMessageWasSent({author: 'me', type : 'file', data : {url: `${apiDomain}/images/${res.data.chat.message}`, fileName: res.data.chat.message}})\n        })\n    }\n\n    return (\n        <>\n            <List\n                itemLayout=\"vertical\"\n                dataSource={users.filter(user => user.role !== 'admin')}\n                style={{padding: 20}}\n                renderItem={user => (\n                <List.Item\n                    actions={[<Space onClick={() => {onClickUserToChat(user)}}><Link to={'/#'}><MessageOutlined/><span style={{paddingLeft: 10}}>Reply</span></Link></Space>]}\n                >\n                    <List.Item.Meta\n                    avatar={<Avatar src={`${apiDomain}/images/${user.avatar}`} />}\n                    title={user.username}\n                    description={user.email}\n                    />\n                </List.Item>\n                )}\n            />\n            {receiverId &&\n                <Launcher\n                    agentProfile={{\n                        teamName: `Reply to ${receiver.username}`,\n                        imageUrl: `${apiDomain}/images/${receiver.avatar}`\n                    }}\n                    messageList={messageList}\n                    onMessageWasSent={onMessageWasSent}\n                    handleClick={() => onClickChat()}\n                    isOpen={Boolean(receiverId)}\n                    onFilesSelected={onFilesSelected}\n                    mute={true}\n                />\n            }\n        </>\n   ) \n}","\nimport {SideBar} from '.././components/Sidebar'\nimport {useState, useEffect} from 'react'\nimport {UserChat} from './Chat/UserChat'\nimport {AdminChat} from './Chat/AdminChat'\nimport {useAuth} from '../components/Auth'\nimport {Spin} from 'antd'\nimport '../index.css'\n\nexport function Index(){\n    const [users, setUsers] = useState([])\n    const [userLogin] = useState(JSON.parse(localStorage.getItem('user')))\n    const [isLoading, setIsLoading] = useState(false)\n    const auth = useAuth()\n    useEffect(() => { \n        auth.index('', (res) => {\n            setUsers(res.data.users)   \n            setIsLoading(true)   \n        })\n    }, [auth])\n\n    return (\n        <SideBar>\n            {userLogin.role !== 'admin' && isLoading &&\n                <UserChat \n                    users={users}\n                >\n                </UserChat>\n            }\n            {userLogin.role === 'admin' && isLoading &&\n                <AdminChat\n                    users={users}\n                >\n                </AdminChat>\n            }\n            {!isLoading && \n                <div className=\"spin\">\n                    <Spin />\n                </div>\n            }\n        </SideBar>\n    )\n}","import {Result, Button} from 'antd'\n\nexport function Page404(){\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Button type=\"primary\">Back Home</Button>}\n        />\n    )\n}","import {Result, Button} from 'antd'\n\nexport function Page500(){\n    return (\n        <Result\n            status=\"500\"\n            title=\"500\"\n            subTitle=\"Sorry, something went wrong.\"\n            extra={<Button type=\"primary\">Back Home</Button>}\n        />\n    )\n}","import React from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {ProvideAuth} from './components/Auth.js'\nimport {Login} from './pages/User/Login'\nimport {PrivateRoute} from './components/Protect'\nimport {User} from './pages/User/User'\nimport {CreatedUser} from './pages/User/CreatedUser'\nimport {UserDetail} from './pages/User/UserDetail'\nimport {UpdatedUser} from './pages/User/UpdatedUser'\nimport {ForgotPassword} from './pages/User/ForgotPassword'\nimport {ResetPassword} from './pages/User/ResetPassword'\nimport {Index} from './pages/index'\nimport {Page404} from './pages/404'\nimport {Page500} from './pages/500'\n\nexport default function App() {\n  return (\n    <ProvideAuth>\n      <Router>\n        <Switch>\n          <Route exact path='/login'>\n            <Login/>\n          </Route>\n          <Route exact path='/signup'>\n            <CreatedUser/>\n          </Route>\n          <Route exact path='/forgot-password'>\n            <ForgotPassword/>\n          </Route>\n          <Route exact path='/reset-password/:token'>\n            <ResetPassword/>\n          </Route>\n          <PrivateRoute exact path='/'>\n            <Index/>\n          </PrivateRoute>\n          <PrivateRoute exact path='/user'>\n            <User/>\n          </PrivateRoute>\n          <PrivateRoute exact path='/user/profile/:id'>\n            <UserDetail/>\n          </PrivateRoute>\n          <PrivateRoute exact path='/user/:id'>\n            <UpdatedUser/>\n          </PrivateRoute>\n          <Route exact path='/404'>\n            <Page404/>\n          </Route>\n          <Route exact path='/500'>\n            <Page500/>\n          </Route>\n        </Switch>\n      </Router>\n    </ProvideAuth>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}